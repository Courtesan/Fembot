import os
import discord
import openai
import re

from discord.ext import commands

# Authenticate using Discord and OpenAI API keys from environment variables
TOKEN = os.environ['DISCORD_TOKEN']
openai.api_key = os.environ['OPENAI_API_KEY']

# Set the OpenAI model to use
model_engine = "text-davinci-002" # update this to use the latest OpenAI model

# Set up Discord bot client
intents = discord.Intents.all()
bot = commands.Bot(command_prefix='!', intents=intents)

# Define function to generate response from GPT-4
def generate_response(prompt):
    try:
        response = openai.Completion.create(
            engine=model_engine,
            prompt=prompt,
            max_tokens=150,
            n=1,
            stop=None,
            temperature=0.7,
        )
        message = response.choices[0].text.strip()
        return message
    except openai.error.RateLimitedError:
        return "Sorry, I have exceeded my API rate limit. Please try again later."

# Define function to check if input contains the keyword "Fembot"
def contains_fembot(input):
    return "fembot" in input.lower()

# Define function to check if input is a question
def is_question(input):
    pattern = r'^.*\?[\s]*$'
    if bool(re.match(pattern, input)):
        return True
    else:
        return input.endswith('?')


# Define event handler for when the bot is ready
@bot.event
async def on_ready():
    print("Fembot is ready to please.")

# Define event handler for when a message is received
@bot.event
async def on_message(message):
    # Ignore messages from the bot itself
    if message.author == bot.user:
        return
    if message.author.bot:
        return

    # Check if input contains the keyword "Fembot"
    if contains_fembot(message.content):
        # Send greeting message
        await message.channel.send("What can I assist you with, Master?")

    # Check if input is a question
    if is_question(message.content):
        # Generate response from GPT-4
        prompt = f"{message.content} Fembot says:"
        response = generate_response(prompt)

        # Send response back to the channel
        await message.channel.send(response)

# Run the Discord bot
bot.run(TOKEN)
